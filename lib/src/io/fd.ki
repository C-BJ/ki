
header "sys" as sys;

func write(fd: i32, str: *String) uxx !failed !again {
	let c = sys.write(fd, str.data(), str.bytes());
	if c == -2 {
		throw again;
	}
	if c < 0 {
		throw failed;
	}
	return c @as uxx;
}

func write_from_ptr(fd: i32, data: ptr, length: uxx) uxx !failed !again {
	let c = sys.write(fd, data, length);
	if c == -2 {
		throw again;
	}
	if c < 0 {
		throw failed;
	}
	return c @as uxx;
}

func read(fd: i32, buffer: ptr, buffer_size: uxx) uxx !failed !again {
	let rcvd = sys.read(fd, buffer, buffer_size);
	if rcvd == -2 {
		throw again;
	}
	if rcvd < 0 {
		throw failed;
	}
	return rcvd @as uxx;
}

func close(fd: i32) void %inline {
	let c = sys.close(fd);
}
