
use utils;

struct Allocator {

	private total: uxx = 0; 
	private freed: uxx = 0; 
	private pool: ?utils:Pool[ptr] = null; 
	private size: uxx; 

	static func init(size: uxx) Allocator {
		let adr = sys_alloc(sizeof_class(Allocator));
		clear(adr, sizeof_class(Allocator));
		let alc =  adr @as Allocator;
		alc.size = size;
		return alc;
	}

	func alloc() ptr {
		this.total++;
		let pool = this.pool;
		if isset(pool) {
			return pool.pop() !? sys_alloc(this.size);
		}
		return sys_alloc(this.size);
	}

	func free(adr: ptr) void {
		this.total--;
		let pool = this.pool ?! {
			let pool = utils:Pool[ptr].init(500);
			pool.add(adr) !! {
				sys_free(adr);
				return;
			};
			this.pool = pool;
			return;
		};
		pool.add(adr) !! {
			sys_free(adr);
			return;
		};
	}
}