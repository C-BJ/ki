
header "sys" as sys;

fn signal(sig: i32, handler: fn(i32)(void)) void {
    sys.signal(sig, handler);
}

fn signal_ignore(sig: i32) void {
	sys.signal(sig, null);
}

fn raise(sig: i32) void {
	sys.raise(sig);
}

#if OS == linux
enum SIG {
    hup: 1,
    interrupt: 2,
    quit: 3,
    //ILL: 4,
    //TRAP: 5,
    abort: 6,
    //IOT: 6,
    bus: 7,
    //FPE: 8,
    kill: 9,
    //USR1: 10,
    segv: 11,
    //USR2: 12,
    pipe: 13,
    //ALRM: 14,
    //term: 15,
    //STKFLT: 16,
    //CHLD: 17,
    //CONT: 18,
    //STOP: 19,
    //TSTP: 20,
    //TTIN: 21,
    //TTOU: 22,
    //URG: 23,
    //XCPU: 24,
    //XFSZ: 25,
    //VTALRM: 26,
    //PROF: 27,
    //WINCH: 28,
    //IO: 29,
    //POLL: 29,
}
#else
enum SIG {
    hup,
    interrupt,
    quit,
    abort,
    bus,
    kill,
    segv,
    pipe,
}
#end